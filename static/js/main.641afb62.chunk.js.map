{"version":3,"sources":["components/Statistics/Statistics.js","resources/options.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FEEDBACK_OPTIONS","FeedbackOptions","options","onLeaveFeedback","map","option","className","styles","feedbackButton","onClick","value","Section","title","children","container","Notification","message","App","state","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","console","log","setState","prevState","this","totalFeedback","positiveCount","isStatistic","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"sRAuBeA,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,gCACE,sCAASJ,KACT,yCAAYC,KACZ,qCAAQC,KACR,uCAAUC,KACV,mDAAsBC,EAAtB,WCRSC,EAFU,CAAC,OAAQ,UAAW,O,gBC0B9BC,EAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEC,UAAWC,IAAOC,eAElBC,QAAS,kBAAMN,EAAgBE,IAC/BK,MAAOL,EAJT,SAMGA,GAJIA,S,gBCQAM,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,sBAAKP,UAAWC,IAAOO,UAAvB,UACE,6BAAKF,IACJC,M,gBCIQE,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,oBAAIV,UAAWC,IAAOO,UAAtB,SAAkCE,KCGrCC,E,4MACJC,MAAQ,CACNvB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPsB,mBAAqB,WACnB,MAA+B,EAAKD,MACpC,OADA,EAAQvB,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBuB,gCAAkC,WAChC,IAAQzB,EAAS,EAAKuB,MAAdvB,KACFG,EAAQ,EAAKqB,qBACnB,OAAOrB,EAAQuB,KAAKC,MAAO3B,EAAOG,EAAS,KAAO,G,EAGpDK,gBAAkB,SAAAE,GAChBkB,QAAQC,IAAInB,GACZ,EAAKoB,UAAS,SAAAC,GACZ,OAAO,eAAGrB,EAASqB,EAAUrB,GAAU,O,4CAI3C,WACE,MAA+BsB,KAAKT,MAA5BvB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjB+B,EAAgBD,KAAKR,qBACrBU,EAAgBF,KAAKP,kCACrBU,EAAcF,EAAgB,EACpC,OACE,qCACE,cAAC,EAAD,CAAShB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEV,QAASF,EACTG,gBAAiBwB,KAAKxB,oBAGzB2B,EACC,cAAC,EAAD,CAASlB,MAAM,YAAf,SACE,cAAC,EAAD,CACEjB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO8B,EACP7B,mBAAoB8B,MAIxB,cAAC,EAAD,CAAcb,QAAQ,6B,GAjDde,aAwDHd,I,YCzDfe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCV1BC,EAAOC,QAAU,CAAC,eAAiB,0C,kBCAnCD,EAAOC,QAAU,CAAC,UAAY,6B,kBCA9BD,EAAOC,QAAU,CAAC,UAAY,mC","file":"static/js/main.641afb62.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div>\r\n      <p>Good:{good}</p>\r\n      <p>Neutral:{neutral}</p>\r\n      <p>Bad:{bad}</p>\r\n      <p>Total:{total}</p>\r\n      <p>Positive feedback:{positivePercentage}%</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","const FEEDBACK_OPTIONS = ['good', 'neutral', 'bad'];\r\n\r\nexport default FEEDBACK_OPTIONS;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      {options.map(option => (\r\n        <button\r\n          className={styles.feedbackButton}\r\n          key={option}\r\n          onClick={() => onLeaveFeedback(option)}\r\n          value={option}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array,\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <h2 className={styles.container}>{message}</h2>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import './App.css';\nimport React, { Component } from 'react';\nimport Statistics from './components/Statistics/Statistics';\nimport FEEDBACK_OPTIONS from './resources/options';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    return total ? Math.round((good / total) * 100) : 0;\n  };\n\n  onLeaveFeedback = option => {\n    console.log(option);\n    this.setState(prevState => {\n      return { [option]: prevState[option] + 1 };\n    });\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    const positiveCount = this.countPositiveFeedbackPercentage();\n    const isStatistic = totalFeedback > 0;\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={FEEDBACK_OPTIONS}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        {isStatistic ? (\n          <Section title=\"Statistic\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalFeedback}\n              positivePercentage={positiveCount}\n            />\n          </Section>\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport '../node_modules/modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackButton\":\"FeedbackOptions_feedbackButton__3bfAS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__11Suw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Notification_container__2Mn67\"};"],"sourceRoot":""}